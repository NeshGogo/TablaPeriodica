@model TablaPeriodica.Models.Elemento[]
@{
    Layout = null;
    string color = "";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Tabla Periodica</title>
    <link href="~/css/tablaPeriodica.css" rel="stylesheet" />
</head>
<body>
    <H1 style="font-size:50px; text-align:center; color:#E9BD52; text-decoration:underline">
        Tabla Periodica de los Elementos Quimicos
    </H1>
    <br />
    <div class="grid-container">
        @for (int i = 0; i < 90; i++)
        {

            if (i < Model.Length)
            {
                @switch (Model[i].Category)
                {
                    case CategorisEnum.Alcalinos:
                        color = "color-alcalinos";
                        break;
                    case CategorisEnum.Alcalinoterreos:
                        color = "color-alcalinoterreos";
                        break;
                    case CategorisEnum.BloqueD:
                        color = "color-bloqueD";
                        break;
                    case CategorisEnum.Lantanidos:
                        color = "color-Lantanidos";
                        break;
                    case CategorisEnum.Actinidos:
                        color = "color-actinidos";
                        break;
                    case CategorisEnum.OtrosMetales:
                        color = "color-otros-metales";
                        break;
                    case CategorisEnum.Metaloides:
                        color = "color-metaloides";
                        break;
                    case CategorisEnum.OtrosNoMetales:
                        color = "color-otros-no-metales";
                        break;
                    case CategorisEnum.Halogenos:
                        color = "color-halogenos";
                        break;
                    case CategorisEnum.GasesNobles:
                        color = "color-gases-nobles";
                        break;
                    default:
                        color = "gray";
                        break;
                }

                <div class="item @color" id="element @Model[i].Id">
                    <p class="item-number">@Model[i].Id  || <span class="itemDelete" onclick="deleteElement('@Model[i].Id')">X</span></p>
                    <h4 class="item-title">@Model[i].Initials</h4>
                    <p class="item-name">@Model[i].Name</p>
                </div>
            }
            else
            {
                <div class="item" style="background-color:gray;"></div>
            }

            if (i == 0)
            {
                <di class="space-blank1">
                </di>
            }
            else if (i == 3 || i == 11)
            {
                <div class="space-blank2">

                </div>
            }

        }
    </div>
    <br /> <br />
           <div class="grid-container">
               @for (int i = 90; i < 120; i++)
               {
                   if (i == 90)
                   {
                       <div class="space-blank-second-grid"></div>
                   }

                   if (i < Model.Length)
                   {
                       if ((i >= 90 && i <= 104) || (i >= 104 && i <= 143))
                       {
                           color = (i >= 90 && i <= 104) ? "color-Lantanidos" : "color-actinidos";
                           <div class="item @color" id="element @Model[i].Id">
                               <p class="item-number">@Model[i].Id || <span class="itemDelete" onclick="deleteElement('@Model[i].Id')">X</span></p>
                               <h4 class="item-title">@Model[i].Initials</h4>
                               <p class="item-name">@Model[i].Name</p>
                           </div>
                       }
                   }
                   else
                   {
                       <div class="item" style="background-color:gray;">

                       </div>
                   }
               }
           </div>

    <br /> <br />
    <div class="leyenda-grid">
        <div class="leyenda-item leyenda-item-header1 color-header-leyendas">
            <span>Metales</span>
        </div>
        <div class="leyenda-item leyenda-item-header2 color-metaloides">
            <span>Metaloides</span>
        </div>
        <div class="leyenda-item leyenda-item-header3 color-header-leyendas">
            <span>No Metales</span>
        </div>
        <div class="leyenda-item leyenda-item-column-span-2 color-alcalinos">
            <span>Alcalinos</span>
        </div>
        <div class="leyenda-item leyenda-item-column-span-2 color-alcalinoterreos">
            <span>Alcalinoterreos</span>
        </div>
        <div class="leyenda-item leyenda-item-column-span-2 color-bloqueD" style="line-height:25px;">
            <span>Metales de Transicion / Bloque D</span>
        </div>
        <div class="leyenda-item leyenda-item-column-span-2" style="overflow: hidden; line-height: 30px;">
            <div style="border-bottom: 1px solid black;" class="color-Lantanidos">
                <span>Lantanidos</span>
            </div>
            <div class="color-actinidos">
                <span>Actinodos</span>
            </div>
        </div>
        <div class="leyenda-item leyenda-item-column-span-2 color-otros-metales">
            <span>Otros Metales</span>
        </div>

        <div class="leyenda-item leyenda-item-column-span-2 color-otros-no-metales">
            <span>Otros No Metales</span>
        </div>
        <div class="leyenda-item leyenda-item-column-span-2 color-halogenos">
            <span>Halogenos</span>
        </div>
        <div class="leyenda-item leyenda-item-column-span-2 color-gases-nobles">
            <span>Gases Nobles</span>
        </div>
    </div>
    <script>

        function deleteElement(Id) {
            debugger;
            const element = document.getElementById('element ' + Id);
            const length = element.children.length
            for (let i = 0; i < length; i++) {
                let item = element.children[i];
                if (i === (length - 1)) {
                    element.children[0].remove();
                } else {
                    item.remove();
                }

            }
            element.style.backgroundColor = "gray";
        }

    </script>
</body>
</html>
